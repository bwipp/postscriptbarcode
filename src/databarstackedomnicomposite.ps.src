% Barcode Writer in Pure PostScript
% https://bwipp.terryburton.co.uk
%
% Copyright (c) 2004-2024 Terry Burton
%
% $Id$
%
% Permission is hereby granted, free of charge, to any
% person obtaining a copy of this software and associated
% documentation files (the "Software"), to deal in the
% Software without restriction, including without
% limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of
% the Software, and to permit persons to whom the Software
% is furnished to do so, subject to the following
% conditions:
%
% The above copyright notice and this permission notice
% shall be included in all copies or substantial portions
% of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
% THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
% CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
% IN THE SOFTWARE.

% --BEGIN ENCODER databarstackedomnicomposite--
% --REQUIRES preamble loadctx unloadctx raiseerror processoptions parseinput gs1process renlinear renmatrix databaromni databarstackedomni micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Stacked Omnidirectional Composite
% --EXAM: (01)03612345678904|(11)990102
% --EXOP:
% --RNDR: renlinear renmatrix
/setpacking where {pop currentpacking true setpacking} if
10 dict
dup /raiseerror dup /uk.co.terryburton.bwipp findresource put
dup /processoptions dup /uk.co.terryburton.bwipp findresource put
dup /databarstackedomni dup /uk.co.terryburton.bwipp findresource put
dup /gs1-cc dup /uk.co.terryburton.bwipp findresource put
dup /gs1process dup /uk.co.terryburton.bwipp findresource put
dup /renmatrix dup /uk.co.terryburton.bwipp findresource put
begin
/databarstackedomnicomposite {

    20 dict begin            % Confine variables to local scope

    /ctx null def
    /dontdraw false def
    /usematrix false def
    /parse false def
    /dontlint false def
    /lintreqs true def

    //processoptions exec /options exch def
    /barcode exch def

    dontdraw { /usematrix true def } if

    % Split the linear and composite parts
    barcode (|) search {
        /linear exch def
        pop
        /comp exch def
    } {
        pop /bwipp.missingCompositeComponent (A Composite Component must be provided following a pipe character) //raiseerror exec
    } ifelse

    usematrix not { gsave } if

    options (lintype) (databarstackedomni) put
    options (linkage) true put
    options (inkspreadv) 0.0 put
    options (dontdraw) true put
    options (dontlint) true put

    % Lint the combined AI element strings
    linear length comp length add string
    dup 0 linear putinterval
    dup linear length comp putinterval
    /ai //gs1process exec pop pop pop

    % Plot the linear part
    linear options //databarstackedomni exec
    dup (pixs) get 0 2 index (pixx) get getinterval /bot exch def
    dup (pixy) get /linheight exch def
    usematrix not { //renmatrix exec } { /pixs get /linpixs exch def } ifelse

    % Plot the separator
    /sepfinder {
        /fp exch def
        fp 1 fp 12 add {
            /i exch def
            bot i get 0 eq {
                bot i 1 sub get 1 eq {
                    1
                } {
                    sep i 1 sub get 0 eq {1} {0} ifelse
                } ifelse
            } {
                0
            } ifelse
            sep exch i exch put
        } for
        /f3 [1 1 1 1 1 1 1 1 1 0 1 1 1] def
        true 0 1 12 {dup bot exch fp add get exch f3 exch get eq and} for {
            % Right shifted module for value 3 finder
            sep fp [ 0 0 0 0 0 0 0 0 0 0 1 0 0 ] putinterval
        } if
    } def
    /sep [ bot {1 exch sub} forall ] def
    sep 0 [ 0 0 0 0 ] putinterval
    sep sep length 4 sub [ 0 0 0 0 ] putinterval
    18 sepfinder

    usematrix not {

        currentpoint

        % Plot the 2D part
        1 linheight 1 add rmoveto comp options //gs1-cc exec //renmatrix exec

        linheight add moveto <<
            /ren /renmatrix
            /pixs sep
            /pixx sep length
            /pixy 1
            /height 1 72 div
            /width sep length 72 div
            /opt options
        >> //renmatrix exec

        grestore
    } {
        /compsym comp options //gs1-cc exec def
        /ccpixs compsym /pixs get def
        /ccpixx compsym /pixx get def

        /linwidth sep length def  % 50
        % ccpixx is 55 for both 2-col CC-A and 2-col CC-B
        /pixs [
            0 ccpixx ccpixs length 1 sub {  % Left pad composite with 1 space
                /i exch def
                0 ccpixs i ccpixx getinterval aload pop
            } for
            sep aload pop 0 0 0 0 0 0
            0 linwidth linpixs length 1 sub {  % Right pad linear with 6 spaces
                /i exch def
                linpixs i linwidth getinterval aload pop 0 0 0 0 0 0
            } for
        ] def
        /pixx ccpixx 1 add def  % 56

        /pixy pixs length pixx idiv def
        <<
        /ren /renmatrix
        /pixs pixs
        /pixx pixx
        /pixy pixy
        /height pixy 72 div
        /width pixx 72 div
        /opt options
        >>

        dontdraw not {
            gsave
            //renmatrix exec
            grestore
        } if
    } ifelse

    end

}
[/barcode] {null def} forall
bind def
/databarstackedomnicomposite dup load /uk.co.terryburton.bwipp defineresource pop
end
/setpacking where {pop setpacking} if
% --END ENCODER databarstackedomnicomposite--
