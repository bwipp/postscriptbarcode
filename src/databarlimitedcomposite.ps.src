% Barcode Writer in Pure PostScript
% https://bwipp.terryburton.co.uk
%
% Copyright (c) 2004-2024 Terry Burton
%
% $Id$
%
% Permission is hereby granted, free of charge, to any
% person obtaining a copy of this software and associated
% documentation files (the "Software"), to deal in the
% Software without restriction, including without
% limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of
% the Software, and to permit persons to whom the Software
% is furnished to do so, subject to the following
% conditions:
%
% The above copyright notice and this permission notice
% shall be included in all copies or substantial portions
% of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
% THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
% CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
% IN THE SOFTWARE.

% --BEGIN ENCODER databarlimitedcomposite--
% --REQUIRES preamble loadctx unloadctx raiseerror processoptions parseinput gs1process renlinear renmatrix databarlimited micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Limited Composite
% --EXAM: (01)09521234543213|(21)abcdefghijklmnopqrst
% --EXOP:
% --RNDR: renlinear renmatrix
/setpacking where {pop currentpacking true setpacking} if
10 dict
dup /raiseerror dup /uk.co.terryburton.bwipp findresource put
dup /processoptions dup /uk.co.terryburton.bwipp findresource put
dup /databarlimited dup /uk.co.terryburton.bwipp findresource put
dup /gs1-cc dup /uk.co.terryburton.bwipp findresource put
dup /gs1process dup /uk.co.terryburton.bwipp findresource put
dup /renlinear dup /uk.co.terryburton.bwipp findresource put
dup /renmatrix dup /uk.co.terryburton.bwipp findresource put
begin
/databarlimitedcomposite {

    20 dict begin            % Confine variables to local scope

    /ctx null def
    /dontdraw false def
    /usematrix false def
    /parse false def
    /dontlint false def
    /lintreqs true def

    //processoptions exec /options exch def
    /barcode exch def

    dontdraw { /usematrix true def } if

    % Split the linear and composite parts
    barcode (|) search {
        /linear exch def
        pop
        /comp exch def
    } {
        pop /bwipp.missingCompositeComponent (A Composite Component must be provided following a pipe character) //raiseerror exec
    } ifelse

    usematrix not { gsave } if

    options (lintype) (databarlimited) put
    options (linkage) true put
    options (inkspreadv) 0.0 put
    options (dontdraw) true put
    options (dontlint) true put

    % Lint the combined AI element strings
    linear length comp length add string
    dup 0 linear putinterval
    dup linear length comp putinterval
    /ai //gs1process exec pop pop pop

    % Plot the linear part
    linear options //databarlimited exec
    dup (sbs) get /linsbs exch def
    dup (bhs) get 0 get 72 mul /linheight exch def
    usematrix not { //renlinear exec } { pop } ifelse

    % Plot the separator
    mark
    1 linsbs {1 index 0 eq {{1}} {{0}} ifelse repeat} forall
    counttomark 1 sub array astore /sep exch def pop pop
    sep 0 [0 0 0] putinterval
    sep sep length 9 sub [0 0 0 0 0 0 0 0 0] putinterval % 4 + 5 right guard spaces

    usematrix not {

        currentpoint

        % Plot the 2D part
        comp options //gs1-cc exec
        dup (pixx) get 72 exch sub linheight 1 add rmoveto
        //renmatrix exec

        linheight add moveto <<
            /ren /renmatrix
            /pixs sep
            /pixx sep length
            /pixy 1
            /height 1 72 div
            /width sep length 72 div
            /opt options
        >> //renmatrix exec

        grestore
    } {
        /compsym comp options //gs1-cc exec def
        /ccpixs compsym /pixs get def
        /ccpixx compsym /pixx get def

        /linpixs [ 0  % Begin with left guard space
            linsbs { cvi 1 index 0 eq {{1}} {{0}} ifelse repeat } forall  % Alternates i 1/0's
        ] def
        /sep [ 0 sep aload pop ] def  % Offset by 1

        /linheight linheight cvi def
        % ccpixx is 72 for CC-A and 82 for CC-B; linpixs length is 79
        ccpixx 72 eq {  % 3-col CC-A
            /pixs [
                0 ccpixx ccpixs length 1 sub {  % Left pad composite with 1 space & right pad with 1 space + 5 right guard spaces
                    /i exch def
                    0 ccpixs i ccpixx getinterval aload pop 0 0 0 0 0 0
                } for
                sep aload pop linheight { linpixs aload pop } repeat
            ] def
            /pixx linpixs length def  % 79
        } {  % 3-col CC-B
            /pixs [
                0 ccpixx ccpixs length 1 sub {  % Right pad composite with 1 space + 5 right guard spaces
                    /i exch def
                    ccpixs i ccpixx getinterval aload pop 0 0 0 0 0 0
                } for
                0 0 0 0 0 0 0 0 0 sep aload pop linheight { 0 0 0 0 0 0 0 0 0 linpixs aload pop } repeat  % Left pad with 9 spaces
            ] def
            /pixx ccpixx 6 add def  % 88
        } ifelse

        /pixy pixs length pixx idiv def
        <<
        /ren /renmatrix
        /pixs pixs
        /pixx pixx
        /pixy pixy
        /height pixy 72 div
        /width pixx 72 div
        /opt options
        >>

        dontdraw not {
            gsave
            //renmatrix exec
            grestore
        } if
    } ifelse

    end

}
[/barcode] {null def} forall
bind def
/databarlimitedcomposite dup load /uk.co.terryburton.bwipp defineresource pop
end
/setpacking where {pop setpacking} if
% --END ENCODER databarlimitedcomposite--
