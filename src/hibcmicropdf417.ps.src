% Barcode Writer in Pure PostScript
% https://bwipp.terryburton.co.uk
%
% Copyright (c) 2004-2024 Terry Burton
%
% $Id$
%
% Permission is hereby granted, free of charge, to any
% person obtaining a copy of this software and associated
% documentation files (the "Software"), to deal in the
% Software without restriction, including without
% limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of
% the Software, and to permit persons to whom the Software
% is furnished to do so, subject to the following
% conditions:
%
% The above copyright notice and this permission notice
% shall be included in all copies or substantial portions
% of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
% THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
% CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
% IN THE SOFTWARE.

% --BEGIN ENCODER hibcmicropdf417--
% --REQUIRES preamble loadctx unloadctx raiseerror processoptions parseinput renmatrix micropdf417--
% --DESC: HIBC MicroPDF417
% --EXAM: A999BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
/setpacking where {pop currentpacking true setpacking} if
10 dict
dup /loadctx dup /uk.co.terryburton.bwipp findresource put
dup /unloadctx dup /uk.co.terryburton.bwipp findresource put
dup /raiseerror dup /uk.co.terryburton.bwipp findresource put
dup /processoptions dup /uk.co.terryburton.bwipp findresource put
dup /renmatrix dup /uk.co.terryburton.bwipp findresource put
dup /micropdf417 dup /uk.co.terryburton.bwipp findresource put
begin
/hibcmicropdf417 {

    20 dict begin                 % Confine variables to local scope

    /ctx null def
    /dontdraw false def
    /columns 2 def
    /validatecheck false def

    //processoptions exec /options exch def
    /barcode exch def

    barcode () eq {
        /bwipp.hibcmicropdf417EmptyData (The data must not be empty) //raiseerror exec
    } if

    /hibcmicropdf417 //loadctx exec

    % Create a string of the available characters
{
    /barchars (0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%) def
    /charvals 43 dict def
    0 1 42 {charvals exch dup barchars exch 1 getinterval exch put} for
} ctxdef

    % Validate the input
    0 1 barcode length 1 sub {
        barcode exch 1 getinterval charvals exch known not {
            /bwipp.hibcmicropdf417BadCharacter (HIBC MicroPDF417 must contain only digits, capital letters, spaces and the symbols -.$/+%) //raiseerror exec
        } if
    } for

    /barlen barcode length validatecheck {1 sub} if def

    /checksum 41 def
    0 1 barlen 1 sub {
        barcode exch 1 getinterval charvals exch get
        checksum add /checksum exch def
    } for
    /checksum checksum 43 mod def
    validatecheck {
        barcode barlen get barchars checksum get ne {
            /bwipp.hibcmicropdf417BadCheckDigit (Incorrect HIBC MicroPDF417 check digit provided) //raiseerror exec
        } if
        /barcode barcode 0 barlen getinterval def
    } if

    /barcode barlen 2 add string dup 1 barcode putinterval def
    barcode 0 43 put
    barcode barlen 1 add barchars checksum get put

    % Get the result of encoding with micropdf417
    options (dontdraw) true put
    options (columns) columns put
    options (validatecheck) false put
    /args barcode options //micropdf417 exec def

    args (opt) options put
    args

    dontdraw not //renmatrix if

    //unloadctx exec

    end

}
[/barcode] {null def} forall
bind def
/hibcmicropdf417 dup load /uk.co.terryburton.bwipp defineresource pop
end
/setpacking where {pop setpacking} if
% --END ENCODER hibcmicropdf417--
