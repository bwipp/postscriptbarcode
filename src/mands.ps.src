% Barcode Writer in Pure PostScript
% https://bwipp.terryburton.co.uk
%
% Copyright (c) 2004-2024 Terry Burton
%
% $Id$
%
% Permission is hereby granted, free of charge, to any
% person obtaining a copy of this software and associated
% documentation files (the "Software"), to deal in the
% Software without restriction, including without
% limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of
% the Software, and to permit persons to whom the Software
% is furnished to do so, subject to the following
% conditions:
%
% The above copyright notice and this permission notice
% shall be included in all copies or substantial portions
% of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
% THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
% CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
% IN THE SOFTWARE.

% --BEGIN ENCODER mands--
% --REQUIRES preamble loadctx unloadctx raiseerror processoptions renlinear ean2 ean5 ean8--
% --DESC: Marks & Spencer
% --EXAM: 0642118
% --EXOP: includetext
% --RNDR: renlinear
/setpacking where {pop currentpacking true setpacking} if
10 dict
dup /raiseerror dup /uk.co.terryburton.bwipp findresource put
dup /processoptions dup /uk.co.terryburton.bwipp findresource put
dup /renlinear dup /uk.co.terryburton.bwipp findresource put
dup /ean8 dup /uk.co.terryburton.bwipp findresource put
begin
/mands {

    20 dict begin

    /ctx null def
    /dontdraw false def
    /includetext false def

    //processoptions exec /options exch def
    /barcode exch def

    /barlen barcode length def

    % Validate the input
    barlen 7 ne barlen 8 ne and {
        /bwipp.MandSbadLength (M&S barcode must be 7 or 8 characters) //raiseerror exec
    } if

    barlen 7 eq {
        /barcode (00000000) 8 string copy dup 1 barcode putinterval def
    } if

    % Get the result of encoding with ean8
    options (dontdraw) true put
    /args barcode options //ean8 exec def

    % Remove the centre guard
    args (bbs) get dup
    dup 2 get 10 exch put
    dup 2 get 11 exch put
    args (bhs) get dup
    dup 2 get 10 exch put
    dup 2 get 11 exch put

    % Fix up the text for 7-digit inputs
    /txt args (txt) get def
    barlen 7 eq {
        0 1 6 {
            txt exch 2 copy
            1 add get 0 get 3 1 roll get
            0 get exch 0 exch putinterval
        } for
        txt 7 get 0 get 0 ( ) putinterval
    } if

    % Add the M and S guards
    10 array dup 0 txt putinterval /txt exch def
    txt 0 get dup length array copy txt exch 8 exch put
    txt 0 get dup length array copy txt exch 9 exch put
    txt 8 get 0 (M) put txt 8 get 1 -12 put
    txt 9 get 0 (S) put txt 9 get 1 69 put

    args (txt) txt put
    args (opt) options put
    args

    dontdraw not //renlinear if

    end

}
[/barcode] {null def} forall
bind def
/mands dup load /uk.co.terryburton.bwipp defineresource pop
end
/setpacking where {pop setpacking} if
% --END ENCODER mands--
