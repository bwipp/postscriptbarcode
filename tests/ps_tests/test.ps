%!PS

/_isEqual {
    2 copy type exch type ne {/testError pstack quit} if
    dup type dup /arraytype eq exch /stringtype eq or {
        2 copy
        length exch length ne {/testError pstack quit} if
        dup length 1 sub 0 exch 1 exch {
            dup 3 index exch get exch 2 index exch get ne {/testError pstack quit} if
        } for
    } {
        2 copy ne {/testError pstack quit}
    } ifelse
    pop pop
} bind def

/_isError {
    exch pop
    2 copy ne {/testError pstack quit} if
    pop pop
} bind def

/_debugIsEqual {
    2 copy
    length exch length ne {/testError pstack quit} if
    dup length 1 sub 0 exch 1 exch {
        dup 3 index exch get exch 2 index exch get ne {/testError pstack quit} if
    } for
    pop
    pop pop
} bind def

/_doTest {
  /test exch def
  /expect exch def
  /cmd exch def
  /cds countdictstack def
  /testStart /cmd load  % Put useful debugging info on stack
  0 dict begin
  {
      cmd exec
  } stopped {
      $error /errorname get     % Put error details on the stack
      $error /errorname () put  % and clear the error dictionary
      $error /errorinfo get
      $error /errorinfo () put
  } if
  end
  expect /test load exec
  clear                                % Clear the operand stack
  countdictstack cds sub {end} repeat  % Pop any stray dicts from the dictstack
} bind def

/isEqual { //_isEqual //_doTest exec } def
/isError { //_isError //_doTest exec } def
/debugIsEqual { //_debugIsEqual //_doTest exec } def

[
    (../../../tests/ps_tests/parseinput.ps.test)
    (../../../tests/ps_tests/gs1process.ps.test)
    (../../../tests/ps_tests/gs1processdl.ps.test)
    (../../../tests/ps_tests/auspost.ps.test)
    (../../../tests/ps_tests/azteccode.ps.test)
    (../../../tests/ps_tests/bc412.ps.test)
    (../../../tests/ps_tests/codablockf.ps.test)
    (../../../tests/ps_tests/code11.ps.test)
    (../../../tests/ps_tests/code128.ps.test)
    (../../../tests/ps_tests/code16k.ps.test)
    (../../../tests/ps_tests/code2of5.ps.test)
    (../../../tests/ps_tests/code39.ps.test)
    (../../../tests/ps_tests/code49.ps.test)
    (../../../tests/ps_tests/code93ext.ps.test)
    (../../../tests/ps_tests/codeone.ps.test)
    (../../../tests/ps_tests/daft.ps.test)
    (../../../tests/ps_tests/databarexpanded.ps.test)
    (../../../tests/ps_tests/databarexpandedcomposite.ps.test)
    (../../../tests/ps_tests/databarexpandedstacked.ps.test)
    (../../../tests/ps_tests/databarexpandedstackedcomposite.ps.test)
    (../../../tests/ps_tests/databarlimited.ps.test)
    (../../../tests/ps_tests/databarlimitedcomposite.ps.test)
    (../../../tests/ps_tests/databaromni.ps.test)
    (../../../tests/ps_tests/databaromnicomposite.ps.test)
    (../../../tests/ps_tests/databarstacked.ps.test)
    (../../../tests/ps_tests/databarstackedcomposite.ps.test)
    (../../../tests/ps_tests/databarstackedomni.ps.test)
    (../../../tests/ps_tests/databarstackedomnicomposite.ps.test)
    (../../../tests/ps_tests/databartruncated.ps.test)
    (../../../tests/ps_tests/databartruncatedcomposite.ps.test)
    (../../../tests/ps_tests/datamatrix.ps.test)
    (../../../tests/ps_tests/dotcode.ps.test)
    (../../../tests/ps_tests/ean13.ps.test)
    (../../../tests/ps_tests/ean13composite.ps.test)
    (../../../tests/ps_tests/ean14.ps.test)
    (../../../tests/ps_tests/ean8.ps.test)
    (../../../tests/ps_tests/ean8composite.ps.test)
    (../../../tests/ps_tests/gs1-128.ps.test)
    (../../../tests/ps_tests/gs1-128composite.ps.test)
    (../../../tests/ps_tests/gs1-cc.ps.test)
    (../../../tests/ps_tests/gs1datamatrix.ps.test)
    (../../../tests/ps_tests/gs1northamericancoupon.ps.test)
    (../../../tests/ps_tests/hanxin.ps.test)
    (../../../tests/ps_tests/hibcazteccode.ps.test)
    (../../../tests/ps_tests/hibccodablockf.ps.test)
    (../../../tests/ps_tests/hibccode128.ps.test)
    (../../../tests/ps_tests/hibccode39.ps.test)
    (../../../tests/ps_tests/hibcdatamatrix.ps.test)
    (../../../tests/ps_tests/hibcdatamatrixrectangular.ps.test)
    (../../../tests/ps_tests/hibcmicropdf417.ps.test)
    (../../../tests/ps_tests/hibcpdf417.ps.test)
    (../../../tests/ps_tests/hibcqrcode.ps.test)
    (../../../tests/ps_tests/japanpost.ps.test)
    (../../../tests/ps_tests/kix.ps.test)
    (../../../tests/ps_tests/maxicode.ps.test)
    (../../../tests/ps_tests/micropdf417.ps.test)
    (../../../tests/ps_tests/microqrcode.ps.test)
    (../../../tests/ps_tests/msi.ps.test)
    (../../../tests/ps_tests/plessey.ps.test)
    (../../../tests/ps_tests/pdf417.ps.test)
    (../../../tests/ps_tests/pdf417compact.ps.test)
    (../../../tests/ps_tests/posicode.ps.test)
    (../../../tests/ps_tests/qrcode.ps.test)
    (../../../tests/ps_tests/rationalizedCodabar.ps.test)
    (../../../tests/ps_tests/rectangularmicroqrcode.ps.test)
    (../../../tests/ps_tests/royalmail.ps.test)
    (../../../tests/ps_tests/sscc18.ps.test)
    (../../../tests/ps_tests/ultracode.ps.test)
    (../../../tests/ps_tests/upca.ps.test)
    (../../../tests/ps_tests/upcacomposite.ps.test)
    (../../../tests/ps_tests/upce.ps.test)
    (../../../tests/ps_tests/upcecomposite.ps.test)
] { 1 dict begin run end } forall

(%stdout) (w) file dup (\nPASS\n) writestring dup flushfile
