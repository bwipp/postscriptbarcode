%!PS

% ISO/IEC 15417:2007

% vim: set ts=4 sw=4 et :

/code128 dup /uk.co.terryburton.bwipp findresource cvx def


{  % Allow for FNC4 immediately after CodeC sequence (cf https://github.com/woo-j/OkapiBarcode/commit/9ce6dccbab20d1190090585ddf91a7f549f4fac9)
    (^193^193^193^193^193^19399999999999999^193) (debugcws parse) code128
} [104 100 100 33 33 33 33 33 33 100 100 99 99 99 99 99 99 99 99 100 100 33 3 106] debugIsEqual

{  % Ignore extended ASCII in numsscr ("Â±" (^177) maps to "1" when masked to ASCII)
    (^177^177^177^1771234AA) (debugcws parse) code128
} [104 100 100 17 17 17 17 100 100 99 12 34 100 33 33 21 106] debugIsEqual

{  % Minimize FNC4 insertion using non-terminal 4 char cut-off instead of 5
    ( ^160^160^160^160 ^160^160^160^160 ) (debugcws parse) code128
} [104 0 100 100 0 0 0 0 100 0 0 0 0 0 100 0 23 106] debugIsEqual

{  % Now unlatches and re-latches with 4 middle spaces (same no. of codewords as if shifts instead)
    ( ^160^160^160^160    ^160^160^160^160 ) (debugcws parse) code128
} [104 0 100 100 0 0 0 0 100 100 0 0 0 0 100 100 0 0 0 0 100 0 97 106] debugIsEqual

{  % TODO: could be 1 codeword smaller by shifting the 2 "A"s instead of unlatching and shifting final "^128"
    (^128^128^128^128^128A0000A^128) (debugcws parse) code128
} [103 101 101 64 64 64 64 64 101 101 33 99 0 0 101 33 101 64 73 106] debugIsEqual

{  % Avoid extraneous CodeC switch (with immediate switch back to CodeA/B) by re-checking digit runlength >= 4 after enca/encb push
    (12^FNC1345^FNC167^FNC18) (debugcws parse parsefnc) code128
} [105 12 102 34 100 21 102 22 23 102 24 49 106] debugIsEqual

{  % Don't start in C if A or B would be more efficient
    (123^FNC14567) (debugcws parse parsefnc) code128
} [104 17 99 23 102 45 67 84 106] debugIsEqual
